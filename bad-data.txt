Testing reconciliation with invalid on-chain transactions.
Run these queries and then run the /api/v1/reconciliation endpoint to see how it handles them.
$ psql "postgres://xyz:xyzpass@localhost:5432/xyzledger"

-- Insert TX with negative amount
INSERT INTO onchain_transactions (
    id, address, tx_hash, amount, currency, direction, block_height, reconciled
) VALUES (
    gen_random_uuid(),
    '0xdadb0d80178819f2319190d340ce9a924f783711',
    '0xaaaabbbbccccddddeeeeffff0000111122223333444455556666777788889999',
    -42.0,
    'ETH',
    'credit',
    12345679,
    false
);

-- Insert TX with unknown address
INSERT INTO onchain_transactions (
    id, address, tx_hash, amount, currency, direction, block_height, reconciled
) VALUES (
    gen_random_uuid(),
    '0x000000000000000000000000000000000000dEaD',
    '0xffffeeee111122223333444455556666777788889999aaaabbbbccccddddeeee',
    1.23,
    'ETH',
    'debit',
    12345680,
    false
);

-- Insert TX with invalid currency
INSERT INTO onchain_transactions (
    id, address, tx_hash, amount, currency, direction, block_height, reconciled
) VALUES (
    gen_random_uuid(),
    '0xdadb0d80178819f2319190d340ce9a924f783711',
    '0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef',
    5.0,
    'DOGE',  -- not in allowed list
    'credit',
    12345681,
    false
);

-- Insert TX with zero amount
INSERT INTO onchain_transactions (
    id, address, tx_hash, amount, currency, direction, block_height, reconciled
) VALUES (
    gen_random_uuid(),
    '0xdadb0d80178819f2319190d340ce9a924f783711',
    '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
    0.0,
    'ETH',
    'credit',
    12345682,
    false
);


After inserting that data I get
http://localhost:8080/api/v1/reconciliation
{
    "Matched": 25,
    "Flagged": 5,
    "Errors": [
        "unknown address: 0x000000000000000000000000000000000000dEaD"
    ],
    "Incompatible": [
        {
            "ID": "c82b7d97-36b2-4b8f-8cc3-5545062f99d3",
            "Address": "0xdadb0d80178819f2319190d340ce9a924f783711",
            "TxHash": "0xdeadbeefbadcafe000000000000000000000000000000000000000000000000",
            "Amount": -1,
            "Currency": "ETH",
            "Direction": "credit",
            "BlockHeight": 12345678
        },
        {
            "ID": "ca8c9fa3-7c63-48d9-a9fd-b9bb9351ef73",
            "Address": "0xdadb0d80178819f2319190d340ce9a924f783711",
            "TxHash": "0xaaaabbbbccccddddeeeeffff0000111122223333444455556666777788889999",
            "Amount": -42,
            "Currency": "ETH",
            "Direction": "credit",
            "BlockHeight": 12345679
        },
        {
            "ID": "f8d713e9-8aaa-4638-8040-7fe78ad530a7",
            "Address": "0x000000000000000000000000000000000000dEaD",
            "TxHash": "0xffffeeee111122223333444455556666777788889999aaaabbbbccccddddeeee",
            "Amount": 1.23,
            "Currency": "ETH",
            "Direction": "debit",
            "BlockHeight": 12345680
        },
        {
            "ID": "4288e6e9-2b0e-43f0-a5cf-86caaa7bca8e",
            "Address": "0xdadb0d80178819f2319190d340ce9a924f783711",
            "TxHash": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef",
            "Amount": 5,
            "Currency": "DOGE",
            "Direction": "credit",
            "BlockHeight": 12345681
        },
        {
            "ID": "16138404-1e67-4159-ab11-462ac6e56baf",
            "Address": "0xdadb0d80178819f2319190d340ce9a924f783711",
            "TxHash": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
            "Amount": 0,
            "Currency": "ETH",
            "Direction": "credit",
            "BlockHeight": 12345682
        }
    ]
}

Conclusion:
✅ Perfect — that result confirms your reconciliation logic is working exactly as expected.

Breakdown:
I inserted 4 intentionally invalid on-chain transactions + 1 earlier invalid tx:
-Negative amounts: -1, -42 → caught by isValidLedgerMatch()
-Unknown address: 0x000000...dEaD → caught by FindUserByAddress
-Unsupported currency: DOGE → caught by config.IsValidCurrency()
-Zero amount: 0.0 → also invalid

What This Proves:
Errors[] properly includes address resolution failures.
Incompatible[] contains all 5 invalid transactions with full detail.
Matched continues to increment only for valid, ledger-matched entries.
Flagged == len(Incompatible)

